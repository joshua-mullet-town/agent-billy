---
# Complete GiveGrove Development Environment with Authentication
- name: Setup GiveGrove Environment with Full Authentication
  hosts: vm_instance
  become: yes
  vars:
    workspace_dir: "/root/GiveGrove"
    
  tasks:
    # System Setup
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install system dependencies
      apt:
        name:
          - curl
          - git
          - build-essential
          - python3-pip
          - xvfb
          - fluxbox
          - x11vnc
          - xterm
          - firefox
          - wget
          - gnupg
          - ca-certificates
        state: present

    # Node.js Setup
    - name: Add NodeSource repository
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
      args:
        creates: /etc/apt/sources.list.d/nodesource.list

    - name: Install Node.js 20
      apt:
        name: nodejs
        state: present
        update_cache: yes

    # VS Code Setup
    - name: Add VS Code repository key
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add VS Code repository
      apt_repository:
        repo: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
        state: present

    - name: Install VS Code
      apt:
        name: code
        state: present
        update_cache: yes

    # Global npm packages
    - name: Install global npm packages
      npm:
        name: "{{ item }}"
        global: yes
      loop:
        - "firebase-tools@13.27.0"
        - "@playwright/test"

    # Git Authentication Setup
    - name: Configure Git with authentication
      git_config:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        scope: global
      loop:
        - { name: "user.name", value: "Joshua Mullet" }
        - { name: "user.email", value: "joshua.mullet@gmail.com" }
        - { name: "credential.helper", value: "store" }

    - name: Create Git credentials file
      copy:
        content: "https://{{ vault_github_username }}:{{ vault_github_token }}@github.com"
        dest: "/root/.git-credentials"
        mode: '0600'

    # Firebase Authentication Setup
    - name: Create Firebase service account key
      copy:
        content: "{{ vault_firebase_service_account_json }}"
        dest: "/root/.firebase-service-account.json"
        mode: '0600'

    - name: Set Firebase authentication environment
      lineinfile:
        path: /root/.bashrc
        line: 'export GOOGLE_APPLICATION_CREDENTIALS="/root/.firebase-service-account.json"'
        create: yes

    # Clone Repository with Authentication
    - name: Clone GiveGrove repository
      git:
        repo: "https://{{ vault_github_username }}:{{ vault_github_token }}@github.com/south-bend-code-works/GiveGrove.git"
        dest: "{{ workspace_dir }}"
        force: yes
        version: "{{ git_branch | default('beta') }}"

    # Install Dependencies
    - name: Install frontend dependencies
      npm:
        path: "{{ workspace_dir }}"
        state: present

    - name: Install backend dependencies
      npm:
        path: "{{ workspace_dir }}/functions"
        state: present

    # Build Backend
    - name: Build Firebase functions
      shell: |
        cd {{ workspace_dir }}/functions
        npm run build
      environment:
        GOOGLE_APPLICATION_CREDENTIALS: "/root/.firebase-service-account.json"

    # Configure Firebase for Development
    - name: Create Firebase development configuration
      copy:
        content: |
          {
            "env": {
              "service_account": "{{ vault_firebase_service_account_json | to_json }}"
            },
            "slack": {
              "webhook": "https://hooks.slack.com/mock",
              "bot_token": "xoxb-mock-token"
            },
            "twilio": {
              "account_sid": "ACmock-account-sid",
              "auth_token": "mock-auth-token",
              "phone_number": "+15555551234"
            },
            "send_grid": {
              "api_key": "SG.mock-api-key",
              "from_email": "dev@givegrove.local"
            },
            "stripe": {
              "secret_key": "sk_test_mock_key",
              "publishable_key": "pk_test_mock_key",
              "webhook_secret": "whsec_mock_secret"
            }
          }
        dest: "{{ workspace_dir }}/functions/.runtimeconfig.json"
        mode: '0644'

    # GUI Environment Setup
    - name: Create display service script
      copy:
        content: |
          #!/bin/bash
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 &
          sleep 2
          fluxbox &
          sleep 2
          x11vnc -display :99 -forever -shared -bg -nopw -xkb -listen 0.0.0.0 -rfbport 5900
        dest: /usr/local/bin/start-display.sh
        mode: '0755'

    - name: Create systemd service for display
      copy:
        content: |
          [Unit]
          Description=Virtual Display Service
          After=network.target

          [Service]
          Type=forking
          ExecStart=/usr/local/bin/start-display.sh
          Restart=always
          User=root

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/display.service

    # Development Services
    - name: Create frontend service script
      copy:
        content: |
          #!/bin/bash
          cd {{ workspace_dir }}
          npm run dev -- --host 0.0.0.0 --port 3000
        dest: /usr/local/bin/start-frontend.sh
        mode: '0755'

    - name: Create backend service script
      copy:
        content: |
          #!/bin/bash
          cd {{ workspace_dir }}/functions
          export GOOGLE_APPLICATION_CREDENTIALS="/root/.firebase-service-account.json"
          npm run serve
        dest: /usr/local/bin/start-backend.sh
        mode: '0755'

    - name: Create systemd service for frontend
      copy:
        content: |
          [Unit]
          Description=GiveGrove Frontend Development Server
          After=network.target

          [Service]
          Type=simple
          ExecStart=/usr/local/bin/start-frontend.sh
          Restart=always
          User=root
          WorkingDirectory={{ workspace_dir }}

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/givegrove-frontend.service

    - name: Create systemd service for backend
      copy:
        content: |
          [Unit]
          Description=GiveGrove Backend Development Server
          After=network.target

          [Service]
          Type=simple
          ExecStart=/usr/local/bin/start-backend.sh
          Restart=always
          User=root
          WorkingDirectory={{ workspace_dir }}/functions
          Environment=GOOGLE_APPLICATION_CREDENTIALS=/root/.firebase-service-account.json

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/givegrove-backend.service

    # Enable and Start Services
    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start display service
      systemd:
        name: display
        enabled: yes
        state: started

    - name: Enable and start frontend service
      systemd:
        name: givegrove-frontend
        enabled: yes
        state: started

    - name: Enable and start backend service
      systemd:
        name: givegrove-backend
        enabled: yes
        state: started

    # Verification
    - name: Wait for services to start
      pause:
        seconds: 30

    - name: Check service status
      systemd:
        name: "{{ item }}"
        state: started
      loop:
        - display
        - givegrove-frontend
        - givegrove-backend
      register: service_status

    - name: Display setup completion
      debug:
        msg: |
          ðŸŽ‰ GiveGrove Development Environment Ready!
          
          Access URLs:
          - Frontend: http://{{ ansible_host }}:3000
          - Backend UI: http://{{ ansible_host }}:4000
          - Functions: http://{{ ansible_host }}:5001
          - VNC: {{ ansible_host }}:5900 (GUI access)
          
          Authentication configured for:
          âœ… GitHub (automatic git operations)
          âœ… Firebase (service account authentication)
          
          Services are running as systemd services and will auto-start on boot.