---
- name: Setup GiveGrove Development Environment
  hosts: all
  become: yes
  vars:
    node_version: "20.17.0"
    npm_version: "10.6.0"
    firebase_cli_version: "13.27.0"
    user_name: "{{ ansible_user | default('developer') }}"
    repo_url: "https://github.com/south-bend-code-works/GiveGrove.git"
    repo_dir: "/home/{{ user_name }}/GiveGrove"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install system dependencies
      apt:
        name:
          - curl
          - wget
          - git
          - build-essential
          - python3-pip
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
          - xvfb
          - x11vnc
          - fluxbox
          - firefox
          - chromium-browser
          - dbus-x11
        state: present

    - name: Install Docker
      block:
        - name: Add Docker GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker repository
          apt_repository:
            repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present

        - name: Install Docker
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-compose-plugin
            state: present

        - name: Add user to docker group
          user:
            name: "{{ user_name }}"
            groups: docker
            append: yes

    - name: Install Node.js via NodeSource
      block:
        - name: Add NodeSource GPG key
          apt_key:
            url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
            state: present

        - name: Add NodeSource repository
          apt_repository:
            repo: "deb https://deb.nodesource.com/node_20.x {{ ansible_distribution_release }} main"
            state: present

        - name: Install Node.js
          apt:
            name: nodejs
            state: present

        - name: Verify Node.js version
          command: node --version
          register: node_version_check
          failed_when: not node_version_check.stdout.startswith('v20.')

    - name: Install global npm packages
      npm:
        name: "{{ item }}"
        global: yes
        state: present
      loop:
        - "firebase-tools@{{ firebase_cli_version }}"
        - "@playwright/test"
        - typescript
        - ts-node

    - name: Install VS Code
      block:
        - name: Add Microsoft GPG key
          apt_key:
            url: https://packages.microsoft.com/keys/microsoft.asc
            state: present

        - name: Add VS Code repository
          apt_repository:
            repo: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
            state: present

        - name: Install VS Code
          apt:
            name: code
            state: present

    - name: Setup X11 forwarding and virtual display
      block:
        - name: Create X11 startup script
          copy:
            dest: /usr/local/bin/start-x11
            mode: '0755'
            content: |
              #!/bin/bash
              export DISPLAY=:99
              Xvfb :99 -screen 0 1920x1080x24 -ac +extension GLX +render -noreset &
              fluxbox &
              x11vnc -display :99 -nopw -listen localhost -xkb -ncache 10 -ncache_cr -forever &

        - name: Create systemd service for X11
          copy:
            dest: /etc/systemd/system/x11-virtual.service
            content: |
              [Unit]
              Description=Virtual X11 Display
              After=network.target

              [Service]
              Type=forking
              User={{ user_name }}
              ExecStart=/usr/local/bin/start-x11
              Environment=HOME=/home/{{ user_name }}
              Restart=always

              [Install]
              WantedBy=multi-user.target

        - name: Enable and start X11 service
          systemd:
            name: x11-virtual
            enabled: yes
            state: started
            daemon_reload: yes

    - name: Setup development user environment
      become_user: "{{ user_name }}"
      become: no
      block:
        - name: Clone GiveGrove repository
          git:
            repo: "{{ repo_url }}"
            dest: "{{ repo_dir }}"
            force: yes

        - name: Install frontend dependencies
          npm:
            path: "{{ repo_dir }}"
            state: present

        - name: Install backend dependencies
          npm:
            path: "{{ repo_dir }}/functions"
            state: present

        - name: Install Playwright browsers
          command: npx playwright install
          args:
            chdir: "{{ repo_dir }}"

        - name: Install Playwright system dependencies
          command: npx playwright install-deps
          args:
            chdir: "{{ repo_dir }}"
          become: yes

        - name: Create environment setup script
          copy:
            dest: "{{ repo_dir }}/setup-dev-env.sh"
            mode: '0755'
            content: |
              #!/bin/bash
              echo "GiveGrove Development Environment Setup"
              echo "====================================="
              echo ""
              echo "Repository cloned to: {{ repo_dir }}"
              echo "Node.js version: $(node --version)"
              echo "npm version: $(npm --version)"
              echo "Firebase CLI version: $(firebase --version | head -1)"
              echo ""
              echo "Next steps:"
              echo "1. Add your Firebase service account key to {{ repo_dir }}/functions/src/utils/firebase-cert.json"
              echo "2. Add your .env files (see SECRETS section below)"
              echo "3. Run 'npm run dev' in {{ repo_dir }} to start frontend"
              echo "4. Run 'npm run serve' in {{ repo_dir }}/functions to start backend"
              echo "5. Or use 'docker-compose up' for full stack"
              echo ""
              echo "VS Code can be started with: code {{ repo_dir }}"
              echo "Virtual display is available on :99 (DISPLAY=:99)"
              echo ""

        - name: Create desktop file for GiveGrove
          copy:
            dest: "/home/{{ user_name }}/Desktop/GiveGrove.desktop"
            mode: '0755'
            content: |
              [Desktop Entry]
              Version=1.0
              Type=Application
              Name=GiveGrove Development
              Comment=Open GiveGrove in VS Code
              Exec=code {{ repo_dir }}
              Icon=code
              Terminal=false
              Categories=Development;

        - name: Create Playwright test script
          copy:
            dest: "{{ repo_dir }}/test-playwright.sh"
            mode: '0755'
            content: |
              #!/bin/bash
              export DISPLAY=:99
              echo "Running Playwright tests in headed mode..."
              echo "Virtual display: $DISPLAY"
              npx playwright test --headed --project=chromium

    - name: Create secrets documentation
      copy:
        dest: "{{ repo_dir }}/SECRETS_SETUP.md"
        content: |
          # Secrets Setup for GiveGrove Development

          This file contains instructions for setting up the required secrets and configuration files.

          ## Required Files

          ### 1. Environment Files
          The following encrypted environment files were found in the repository:
          - `.env.enc` (main environment file)
          - `.env.test.enc` (test environment file)

          You'll need to decrypt these or create new `.env` files with the required variables.

          ### 2. Firebase Service Account
          Create: `functions/src/utils/firebase-cert.json`
          This should contain your Firebase service account private key JSON.

          ### 3. Firebase Configuration
          The app uses Firebase auto-configuration, but you may need to set up:
          - Firebase project ID
          - Firebase API keys
          - Database rules (already in `database.rules.json`)

          ### 4. External Service Keys
          Based on the dependencies, you'll likely need keys for:
          - Stripe (payment processing)
          - SendGrid (email)
          - Twilio (SMS)
          - Algolia (search)
          - Google Maps API

          ## Environment Variables Template
          Create `.env` file in the root directory with:
          ```
          # Firebase
          VITE_FIREBASE_API_KEY=your_api_key
          VITE_FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com
          VITE_FIREBASE_PROJECT_ID=your_project_id
          VITE_FIREBASE_STORAGE_BUCKET=your_project.appspot.com
          VITE_FIREBASE_MESSAGING_SENDER_ID=your_sender_id
          VITE_FIREBASE_APP_ID=your_app_id

          # External Services
          STRIPE_PUBLISHABLE_KEY=pk_test_...
          SENDGRID_API_KEY=SG....
          TWILIO_ACCOUNT_SID=AC...
          ALGOLIA_APP_ID=...
          GOOGLE_MAPS_API_KEY=...
          ```

          ## Security Note
          Never commit real secrets to version control. The encrypted files suggest 
          this project uses encryption for secrets management.

    - name: Display completion message
      debug:
        msg: |
          GiveGrove development environment setup complete!
          
          Repository: {{ repo_dir }}
          Virtual Display: :99 (accessible via VNC on localhost:5900)
          
          Next steps:
          1. SSH into the machine with X11 forwarding: ssh -X user@machine
          2. Set up secrets as described in {{ repo_dir }}/SECRETS_SETUP.md
          3. Start development:
             - Frontend: cd {{ repo_dir }} && npm run dev
             - Backend: cd {{ repo_dir }}/functions && npm run serve  
             - Full stack: cd {{ repo_dir }} && docker-compose up
          4. Open VS Code: code {{ repo_dir }}
          5. Run Playwright tests: {{ repo_dir }}/test-playwright.sh